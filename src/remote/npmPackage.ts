/**
 * Package *metadata* describes a package for its consumers: who wrote it, where its
 * repository is, and what versions of it have been published. It also contains a
 * description of each *version* of a package present in the registry, listing its
 * dependencies, giving the url of its tarball, and so on. Package metadata is useful
 * for finding packages and for installing them.
 */
export interface PackageMetadata {
  /** the package name, used as an ID in CouchDB */
  _id: string
  /** the revision number of this version of the document in CouchDB */
  _rev: string
  /** the package name */
  name: string
  /** a short description of the package */
  description: string
  /** a mapping of dist tags to the versions they point to */
  "dist-tags": {
    [tag: string]: string
  }
  /** a mapping of version numbers to objects containing the information needed to install that version */
  versions: {
    [key: string]: Version
  }
  /** the first 64K of the README data for the most-recently published version of the package */
  readme: string
  /**
   * array of [human](#human) objects for people with permission to publish this package; not
   authoritative but informational
   */
  maintainers: Human[]
  /** an object mapping versions to the time published, along with `created` and `modified` timestamps */
  time: { [key: string]: Date }
  /** [human](#human) object */
  author: Human
  /** as given in package.json, for the latest version */
  repository?: Repository
  /** an object whose keys are the npm user names of people who have starred this package */
  users: { [key: string]: boolean }
  /** The name of the file from which the readme data was taken. */
  readmeFilename: string
  /** url */
  homepage: string
  /** array of string keywords */
  keywords: string[]
  /** array of [human](#human) objects */
  contributors: Human[]
  bugs: {
    url: string
  }
  /** the [SPDX identifier](https://spdx.org/licenses/) of the package's license */
  license: string
}

export interface Human {
  /** a freeform string name */
  name: string
  /** an email address */
  email?: string
  /** a url for a web page with more information about the author */
  url?: string
}

/**
 * An object specifying the repository where the source for this package might be found.
 */
export interface Repository {
  type: string
  url: string
}

export interface Version {
  version: string
  name: string
  publishConfig?: {
    "proprietary-attribs"?: boolean
    tag?: string
  }
  description: string
  keywords: string[]
  preferGlobal?: boolean
  config?: {
    publishtest: boolean
  }
  homepage: string
  author: Human
  repository: Repository
  bugs: {
    email?: string
    url: string
  }
  directories: {
    doc: string
    man: string
    lib: string
    bin: string
  }
  main: string
  bin: {
    npm: string
    npx?: string
  }
  dependencies: { [key: string]: string }
  bundleDependencies: string[]
  devDependencies: { [key: string]: string }
  engines?: {
    node: string
    npm?: string
  }
  scripts: {
    [key: string]: string
  }
  licenses?: Repository[]
  _npmUser: Human
  _id: string
  contributors: Human[]
  optionalDependencies?: {
    [key: string]: string
  }
  _engineSupported?: boolean
  _npmVersion: string
  _nodeVersion?: string
  _defaultsLoaded?: boolean
  man: string[]
  dist: Dist
  maintainers?: Human[]
  _from?: string
  license?: string
  _shasum?: string
  gitHead?: string
  deprecated?: string
  _npmOperationalInternal?: {
    host: string
    tmp: string
  }
  readme?: string
  readmeFilename?: string
  _hasShrinkwrap?: boolean
  exports?: {
    [path: string]: string | Array<{ default: string } | string>
  }
  "//"?: string[]
  tap?: unknown
  workspaces?: string[]
  templateOSS?: {
    applyRootRepoFiles?: boolean
    applyWorkspaceRepoFiles?: boolean
    applyRootModuleFiles?: boolean
    workspaces?: string[]
    version: string
    rootRepo?: boolean
    rootModule?: boolean
    releaseTest?: string
    ciVersions?: string[]
    releaseBranches?: string[]
    "//@npmcli/template-oss"?: string
    content?: string
  }
}

/**
 * The dist object is generated by npm and may be relied upon. Each dist object has at least two fields:
 */
export interface Dist {
  /** the SHA-1 sum of the tarball */
  shasum: string
  /** the url of the tarball containing the payload for this package */
  tarball: string
  /**
   * since Apr 2017, string in the format `<hashAlgorithm>-<base64-hash>`, refer the
   * [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)
   * and [cacache](https://github.com/npm/cacache#integrity) package for more
   */
  integrity?: string
  signatures?: {
    keyid: string
    sig: string
  }[]
  /** since Feb 2018, the number of files in the tarball, folder excluded */
  fileCount?: number
  /** since Feb 2018, the total byte of the unpacked files in the tarball */
  unpackedSize?: number
  /**
   * since Apr 2018, a PGP signature of `<package>@<version>:<integrity>`, refer the npm
   * [blog](https://blog.npmjs.org/post/172999548390/new-pgp-machinery) and
   * [doc](https://docs.npmjs.com/about-pgp-signatures-for-packages-in-the-public-registry) for
   * more.
   */
  "npm-signature"?: string
}
